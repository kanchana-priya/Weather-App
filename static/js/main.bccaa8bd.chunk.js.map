{"version":3,"sources":["components/inputer.js","components/result.js","App.js","reportWebVitals.js","index.js"],"names":["Inputer","inputer","setInputer","findWeather","className","src","alt","style","padding","type","placeholder","onChange","event","target","value","backgroundColor","color","cursor","border","borderRadius","fontSize","onClick","preventDefault","Result","temp","desc","icon","setTemp","App","useState","description","setDescription","setIcon","a","url","axios","get","response","data","main","weather","weatherDescription","imageURL","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQA+BeA,MA3Bf,YAAoD,IAAjCC,EAAgC,EAAhCA,QAAQC,EAAwB,EAAxBA,WAAWC,EAAa,EAAbA,YAUrC,OACQ,qBAAKC,UAAU,WAAf,SACF,sBAAKA,UAAU,iBAAf,UACC,oDACH,2CACA,qBAAKC,IAAI,sHACTC,IAAI,SACJ,iCACI,uBAAOC,MAAO,CAACC,QAAQ,SAAUC,KAAK,OAAOC,YAAY,uBAAuBC,SAhBrE,SAACC,GACnBV,EAAWU,EAAMC,OAAOC,QAeuFA,MAAOb,IAC/G,uBACA,uBACA,wBAAQM,MAAO,CAACQ,gBAAgB,QAAQP,QAAQ,YAAYQ,MAAM,QAAQC,OAAO,UAAUC,OAAO,OAAOC,aAAa,MAAMC,SAAS,QAASC,QAfpI,SAACT,GAClBA,EAAMU,iBACNnB,KAa2KM,KAAK,SAAzK,6B,iBCTMc,G,MAbA,SAAC,GAA6B,IAA5BC,EAA2B,EAA3BA,KAAKC,EAAsB,EAAtBA,KAAKC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,QAC/B,OACQ,qBAAKvB,UAAU,SAAf,SACF,sBAAKA,UAAU,aAAf,UACC,uCAAUoB,EAAV,WACH,4BAAIC,IACJ,qBAAKpB,IAAKqB,EAAMpB,IAAI,SACpB,uBACA,wBAAQe,QAAS,WAAMM,EAAQ,KAA/B,yBC6BUC,MAlCf,WAEI,MAA0BC,mBAAS,IAAnC,mBAAM5B,EAAN,KAAcC,EAAd,KACH,EAAoB2B,mBAAS,IAA7B,mBAAML,EAAN,KAAWG,EAAX,KACA,EAAkCE,mBAAS,IAA3C,mBAAMC,EAAN,KAAkBC,EAAlB,KACA,EAAoBF,mBAAS,IAA7B,mBAAMH,EAAN,KAAWM,EAAX,KAEM7B,EAAW,uCAAG,sCAAA8B,EAAA,4DACN,mCACF,SACLC,EAAI,qDAAuDjC,EAAvD,uDAHS,SAIIkC,IAAMC,IAAIF,GAJd,cAIbG,EAJa,gBAKAA,EAASC,KAAKC,KAAKf,KALnB,cAKbA,EALa,iBAMca,EAASC,KAAKE,QAAQ,GAAGV,YANvC,eAMbW,EANa,iBAOAJ,EAASC,KAAKE,QAAQ,GAAGd,KAPzB,QAObA,EAPa,OAQbgB,EAAW,oCAAqChB,EAAO,OAE7DC,EAAQH,GACRO,EAAeU,GACfT,EAAQU,GACRxC,EAAW,IAbQ,4CAAH,qDAgBjB,OACQ,qBAAKE,UAAU,MAAf,SACQ,KAAToB,EACE,cAAC,EAAD,CAASvB,QAASA,EAASC,WAAYA,EAAYC,YAAaA,IACnE,cAAC,EAAD,CAAQqB,KAAMA,EAAMC,KAAMK,EAAaJ,KAAMA,EAAMC,QAASA,OCrBpDgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bccaa8bd.chunk.js","sourcesContent":["import React from 'react';\r\nimport './inputer.css';\r\n\r\n\r\nfunction Inputer ({inputer,setInputer,findWeather}){\r\n\t\r\n\tconst handleChange=(event)=>{\r\n\t\tsetInputer(event.target.value)\r\n\t};\r\n\t\r\n\tconst handleClick=(event)=>{\r\n\t\tevent.preventDefault();\r\n\t\tfindWeather();\r\n\t};\r\n\treturn(\r\n\t        <div className=\"inputBox\">\r\n\t\t\t    <div className=\"inputBox_field\">\r\n\t\t\t\t    <h1>Google Weather App</h1>\r\n\t\t\t\t\t<p>Powered by</p>\r\n\t\t\t\t\t<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/768px-Google_%22G%22_Logo.svg.png\"\r\n\t\t\t\t\talt=\"logo\" />\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t    <input style={{padding:'5px 0'}} type=\"text\" placeholder='Enter your city name' onChange={handleChange} value={inputer} />\r\n\t\t\t\t\t    <br />\r\n\t\t\t\t\t    <br />\r\n\t\t\t\t\t    <button style={{backgroundColor:'green',padding:'10px 16px',color:'white',cursor:'pointer',border:'none',borderRadius:'4px',fontSize:'20px'}} onClick={handleClick} type=\"submit\" >Search</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\nexport default Inputer;","import React from 'react';\r\nimport './result.css';\r\n\r\nconst Result = ({temp,desc,icon,setTemp}) =>{\r\n\treturn(\r\n\t        <div className=\"result\">\r\n\t\t\t    <div className=\"result_box\">\r\n\t\t\t\t    <h1>Temp:{temp}Â°C</h1>\r\n\t\t\t\t\t<p>{desc}</p>\r\n\t\t\t\t\t<img src={icon} alt=\"logo\" />\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<button onClick={() =>{setTemp('')}}>Back</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t);\r\n}\r\nexport default Result;","import React, {useState} from 'react';\nimport Inputer from './components/inputer.js';\nimport axios from 'axios';\nimport Result from './components/result.js';\n\n\nfunction App() {\n  \n    const[inputer,setInputer]=useState('');\n\tconst[temp,setTemp]=useState('');\n\tconst[description,setDescription]=useState('');\n\tconst[icon,setIcon]=useState('');\n\t\n\tconst findWeather = async() =>{\n\t\tconst apikey=\"e4dc334f7524d09b7a31e636225ecf09\";\n\t\tconst unit=\"matric\";\n\t\tconst url=\"https://api.openweathermap.org/data/2.5/weather?q=\" + inputer +\"&appid=\" +apikey +\"&units=\"+unit;\n\t\tconst response = await axios.get(url);\n\t\tconst temp = await response.data.main.temp;\n\t\tconst weatherDescription = await response.data.weather[0].description;\n\t\tconst icon = await response.data.weather[0].icon;\n\t\tconst imageURL = \"https://openweathermap.org/img/w/\"+ icon + \".png\";\n\t\t//console.log(temp,weatherDescription,imageURL);\n\t\tsetTemp(temp);\n\t\tsetDescription(weatherDescription);\n\t\tsetIcon(imageURL);\n\t\tsetInputer(\"\");\n\t};\n\t\n\treturn(\n\t        <div className=\"app\">\n\t\t\t    {temp === \"\" ?\n\t\t\t      (<Inputer inputer={inputer} setInputer={setInputer} findWeather={findWeather} />):\n\t\t\t\t  (<Result temp={temp} desc={description} icon={icon} setTemp={setTemp} />)}\n\t        </div>\n\t\t\t);\n\t\n}\n \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}